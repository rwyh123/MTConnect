plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
    /// Джакартой будем сериализировать в xml
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.5'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

    ///openSCV для прочтения датасета
    implementation 'com.opencsv:opencsv:5.9'

    implementation 'org.jetbrains:annotations:24.1.0'

    testImplementation 'org.testng:testng:7.1.0'
    testImplementation 'org.glassfish.jaxb.core:'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// чтобы Gradle запускал тесты TestNG
test {
    useTestNG()
}